/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        gaming {
            bindings = <&to 4>;
            key-positions = <36 37 38>;
            layers = <0>;
        };

        normal {
            bindings = <&to 0>;
            key-positions = <36 37 38>;
            layers = <4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  '   |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | BKSP |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R      &kp T    &kp Z  &kp U           &kp I         &kp O    &kp P      &kp RA(Y)
&kp LCTRL  &kp A  &kp S  &kp D         &kp F      &kp G    &kp H  &kp J           &kp K         &kp L    &kp RA(P)  &kp BACKSPACE
&kp LSHFT  &kp Y  &kp X  &kp C         &kp V      &kp B    &kp N  &kp M           &kp COMMA     &kp DOT  &kp SLASH  &kp RA(Q)
                         &kp LEFT_ALT  &kp SPACE  &mo 1    &mo 2  &kp LEFT_SHIFT  &kp LEFT_WIN
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp N1     &kp N2     &kp N3     &kp N4           &kp N5         &kp N6          &kp N7            &kp N8           &kp N9             &kp N0      &kp DEL
&trans      &kp LC(A)  &kp LC(W)  &kp LC(T)  &kp LC(LS(TAB))  &kp LC(TAB)    &kp C_NEXT      &kp LEFT          &kp UP           &kp RIGHT          &kp DOWN    &kp BACKSPACE
&trans      &kp LC(Y)  &kp LC(X)  &kp LC(C)  &kp LC(V)        &kp LA(TAB)    &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp C_MUTE  &trans
                                  &kp LGUI   &trans           &kp SPACE      &kp RET         &trans            &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &kp F1    &kp F2  &kp F3    &kp F4    &kp F5       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                          &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &bootloader  &bt BT_SEL 0    &bt BT_DISC 0  &bootloader  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans       &bt BT_SEL 1    &bt BT_DISC 1  &trans       &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &bt BT_CLR   &bt BT_SEL 2    &bt BT_DISC 2  &trans       &trans  &trans  &trans  &trans
                        &trans  &trans       &trans          &trans         &trans       &trans
            >;
        };

        layer_4 {
            bindings = <
&kp ESC    &kp TAB         &kp N1  &kp N2    &kp N3     &kp N4    &trans  &trans  &trans  &trans  &trans  &trans
&kp T      &kp LEFT_SHIFT  &kp A   &kp W     &kp D      &kp R     &trans  &trans  &trans  &trans  &trans  &trans
&kp POUND  &kp LCTRL       &kp Q   &kp S     &kp E      &kp V     &trans  &trans  &trans  &trans  &trans  &trans
                                   &kp LALT  &kp SPACE  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        bt_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
